version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    restart: always
    networks:
      - ${NETWORK}
    ports:
      - "5672:5672"   # Puerto para conexiones de RabbitMQ
      - "15672:15672" # Puerto para la interfaz de administración
    environment:
      RABBITMQ_DEFAULT_USER: ${USER_RABBITMQ}   # Usuario definido
      RABBITMQ_DEFAULT_PASS: ${PASSWORD_RABBITMQ}  # Contraseña definida
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - ${NETWORK}
    ports:
      - "6379:6379"   # Puerto para Redis
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_MYSQL_DOCKER}
      MYSQL_USER: paul
      MYSQL_PASSWORD: paulp
    ports:
      - "3307:3306"
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ${NETWORK}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
  gateway:
    container_name: gateway
    restart: always
    build:
      context: ./gateway
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - MASIVOS_SERVICE_URL=${MASIVOS_SERVICE_URL}
      - GESTOR_SERVICE_URL=${GESTOR_SERVICE_URL}
      - LEADS_SERVICE_URL=${LEADS_SERVICE_URL}
      - STORAGE_SERVICE_URL=${STORAGE_SERVICE_URL}
      - USUARIOS_SERVICE_URL=${USUARIOS_SERVICE_URL}
      - MAILING_SERVICE_URL=${MAILING_SERVICE_URL}
    networks:
      - ${NETWORK}
    command: ["npm", "run", "start"] 
  
  masivos:
    container_name: masivos
    restart: always
    build:
      context: ./masivos
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - DB_NAME=${DB_NAME_MASIVOS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_DIALECT=${DB_DIALECT}
      - DB_PORT=${DB_PORT}
      - ALTER=${ALTER}
      - DB_HOST_DOCKER=${DB_HOST_DOCKER}
      - DB_USER_MYSQL_DOCKER=${DB_USER_MYSQL_DOCKER}
      - DB_PASSWORD_MYSQL_DOCKER=${DB_PASSWORD_MYSQL_DOCKER}
      - DOCKER_HOST_DEMON=${DOCKER_HOST_DEMON}
      - TIMEOUT_WEBSOCKET=${TIMEOUT_WEBSOCKET}
      - GOOGLE_SERVICE_ACCOUNT_EMAIL=${GOOGLE_SERVICE_ACCOUNT_EMAIL}
      - GOOGLE_PRIVATE_KEY=${GOOGLE_PRIVATE_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_KEY=${ACCESS_KEY}
      - SECRET_KEY_R2=${SECRET_KEY_R2}
      - ENDPOINT_URL=${ENDPOINT_URL}
      - BUCKET_NAME=${BUCKET_NAME}
      - HOST_RABBITMQ=${HOST_RABBITMQ}
      - USER_RABBITMQ=${USER_RABBITMQ}
      - PASSWORD_RABBITMQ=${PASSWORD_RABBITMQ}
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    networks:
      - ${NETWORK}
    user: root
    command: ["npm", "run", "start"]

  gestor-archivos:
    container_name: gestor
    restart: always
    build:
      context: ./gestor-archivos
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - DB_NAME=${DB_NAME_GESTOR}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_DIALECT=${DB_DIALECT}
      - DB_PORT=${DB_PORT}
      - ALTER=${ALTER}
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_KEY=${ACCESS_KEY}
      - SECRET_KEY_R2=${SECRET_KEY_R2}
      - ENDPOINT_URL=${ENDPOINT_URL}
      - BUCKET_NAME=${BUCKET_NAME}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ${NETWORK}
    command: ["npm", "run", "start"]

  leads: 
    container_name: leads
    restart: always
    build:
      context: ./leads
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - LOAD_DATA=false
      - DB_NAME=${DB_NAME_LEADS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_DIALECT=${DB_DIALECT}
      - DB_PORT=${DB_PORT}
      - ALTER=${ALTER}
      - HOST_RABBITMQ=${HOST_RABBITMQ}
      - USER_RABBITMQ=${USER_RABBITMQ}
      - PASSWORD_RABBITMQ=${PASSWORD_RABBITMQ}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ${NETWORK}
    command: ["npm", "run", "start"]
  
  storage: 
    container_name: storage
    restart: always
    build:
      context: ./storage
    ports:
      - "8004:8004"
    environment:
      - PORT=8004
      - DB_NAME=${DB_NAME_STORAGE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_DIALECT=${DB_DIALECT}
      - DB_PORT=${DB_PORT}
      - ALTER=${ALTER}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ${NETWORK}
    command: ["npm", "run", "start"]
  
  usuarios: 
    container_name: usuarios
    restart: always
    build:
      context: ./usuarios
    ports:
      - "8005:8005"
    environment:
      - PORT=8005
      - DB_NAME=${DB_NAME_USUARIOS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_DIALECT=${DB_DIALECT}
      - DB_PORT=${DB_PORT}
      - ALTER=${ALTER}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ${NETWORK}
    command: ["npm", "run", "start"]
  mailing: 
    container_name: mailing
    restart: always
    build:
      context: ./mailing
    ports:
      - "8006:8006"
    environment:
      - PORT=8006
      - DB_NAME=${DB_NAME_MAILING}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_DIALECT=${DB_DIALECT}
      - DB_PORT=${DB_PORT}
      - ALTER=${ALTER}
      - HOST_RABBITMQ=${HOST_RABBITMQ}
      - USER_RABBITMQ=${USER_RABBITMQ}
      - PASSWORD_RABBITMQ=${PASSWORD_RABBITMQ}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ${NETWORK}
    command: ["npm", "run", "start"]
  telebot:
    container_name: telebot
    restart: always
    build: 
      context: ./telebot
    ports:
      - "8007:8007"
    environment:
      - PORT=8007
      - DB_NAME=${DB_NAME_TELEBOT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - HOST_RABBITMQ=${HOST_RABBITMQ}
      - USER_RABBITMQ=${USER_RABBITMQ}
      - PASSWORD_RABBITMQ=${PASSWORD_RABBITMQ}
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - ${NETWORK}
    command: ["python", "src/App.py"]
volumes:
  mysql_data:
networks:
  bot-network:
    external: true